# Decompile By Xenzi Ganzz 
# By one dek
import os
prefix = os.getenv("PREFIX")
def bin():
    file = "%s/bin/Marbase"%(prefix)
    result = "#!%s/bin/python2\nimport os\nfrom Marbase import main\nif 'termux' in os.getenv('PREFIX'):\n    main()\nelse:\n    exit('# Script ini hanya untuk pengguna aplikasi termux!')"%(prefix)
    with open(file, mode="w") as load:
        load.write(result)
    os.system("chmod 775 %s"%(file))
def lib():
    file = "%s/lib/python2.7/Marbase.py"%(prefix)
    result = 'import os\r\nimport sys\r\nimport time\r\nimport marshal\r\nfrom os import path, unlink\r\n\r\ndef stdout(i):\r\n    sys.stdout.write(i) ; sys.stdout.flush()\r\n\r\ntry:\r\n    import uncompyle6\r\nexcept:\r\n    stdout("\\r# module uncompyle6 belum terinstall") ; time.sleep(2)\r\n    stdout("\\r# sedang menginstall module uncompyle6, mohon tunggu sebentar")\r\n    os.system("python2 -m pip install uncompyle6 > /dev/null")\r\n    stdout("\\r# successfull menginstal module uncompyle6") ; time.sleep(2)\r\n    exit(stdout("\\r# silahkan mulai ulang tools ini :)\\n"))\r\nfrom xdis.load import load_module\r\n\r\ndef aingKw(fl="", out="", kode=None):\r\n    dora=0\r\n    code=[ "# decompiling by Marbase (Xenzi Ganz) with marshal decompiling (Marbase)\\n"]\r\n    kode=open(fl)\r\n    raimu=kode.readlines()\r\n    for i in raimu:\r\n        if i.startswith("#"):\r\n            dora += 1\r\n        else:\r\n            code.append(i)\r\n    code.append("\\n# mau recode ya Malu bos Udah gede Recode ")\r\n    result=("").join(code)\r\n    if out == "":\r\n        print(result)\r\n    else:\r\n        with open(out, mode="w") as (load):\r\n            load.write(result)\r\n\r\ndef unmarshal(file="", out="", cache=""):\r\n    file=file\r\n    out=out\r\n    cache=cache\r\n    ojek = 0\r\n    while True:\r\n        ips = []\r\n        kok = None\r\n        rep = None\r\n        place = None\r\n        cok = False\r\n        kode = open(file).read()\r\n        if "# decompiling error!!!" in kode:\r\n            if os.path.isfile(cache):\r\n                wih = open(cache).read()\r\n                with open(out, mode="w") as load:\r\n                    load.write(wih)\r\n                stdout("\\r# decompiling error saved to %s\\n"%(out))\r\n                break\r\n            else:\r\n                stdout("\\r# decompiling eror :)\\n")\r\n                break\r\n        if "exec" not in kode:\r\n            if os.path.isfile(cache):\r\n                stdout("\\r# decompiling done saved to %s\\n"%(out))\r\n                break\r\n            else:\r\n                stdout("\\r# decompiling error, not found exec\\n")\r\n                break\r\n        else:\r\n            ojek += 1\r\n            for i in kode.splitlines():\r\n                if i[:4]=="exec":\r\n                    res = i[:4] + i[4]\r\n                    shel = "AingKw=%s"%(i[4])\r\n                    ips.append(i.replace(res, shel))\r\n                    kok = kode.replace(i, ips[0])\r\n                    break\r\n            if kok is not None:\r\n                magic = "\\ntry:\\n    __import__(\'uncompyle6\').main.decompile(2.7, AingKw, __import__(\'sys\').stdout)\\nexcept (AssertionError):\\n    print(AingKw)\\nexcept (NameError, KeyError, IndexError, ValueError):\\n    print(\'# decompiling error!!!\')\\n"\r\n                with open(cache, mode="w") as load:\r\n                    load.write(kok)\r\n                    load.write(magic)\r\n                os.system("python2 %s >%s"%(cache, out))\r\n                stdout("\\r# decompiling file object %s "%(str(ojek)))\r\n                file = out\r\n            else:\r\n                stdout("\\r# decompiling done saved to %s\\n"%(out))\r\n                break\r\n\r\ndef Marbase(a,b="",c=".stdin"):\r\n    if b == "":\r\n        b="decompiled.py"\r\n    a=a\r\n    b=b\r\n    c=c\r\n    try:\r\n        unmarshal(a,b,c)\r\n    except (KeyboardInterrupt):\r\n        stdout("\\r# decompiling eror :)\\n")\r\n    if path.isfile(c):\r\n        unlink(c)\r\n    else:pass\r\n    exit()\r\n\r\ndef dis(dl, fl="", cache=".stdin", stdin=".stdin2"):\r\n    magic = "AingKw=__import__(\'marshal\').loads({})\\ntry:\\n    __import__(\'uncompyle6\').main.decompile(2.7, AingKw, __import__(\'sys\').stdout)\\nexcept:\\n    exit(\'# decompiling error!!\')\\n"\r\n    ps = repr(marshal.dumps(dl))\r\n    result = magic.format(ps)\r\n    with open(cache, mode="w") as (load):\r\n        load.write(result)\r\n    os.system("python2 %s > %s"%(cache, stdin))\r\n    value=open(stdin).read()\r\n    unlink(cache)\r\n    if fl=="":\r\n        aingKw(stdin)\r\n    else:\r\n        aingKw(stdin,fl)\r\n        print("write %s"%(fl))\r\n    unlink(stdin)\r\n\r\ndef make_pyc(dl, fl=""):\r\n    magic = \'\\x03\\xf3\\r\\n\\xd0\\xe6~`\'\r\n    code=None\r\n    if "code object" in str(dl):\r\n        code=marshal.dumps(dl)\r\n    else:\r\n        try:\r\n            marshal.loads(dl)\r\n            code=dl\r\n        except:\r\n            code=None\r\n    if code is None:\r\n        code=marshal.dumps(compile(dl, "<AingKw>", "exec"))\r\n    if fl == "":\r\n       fl="stdin.pyc"\r\n    with open(fl, mode="w") as (load):\r\n       load.write(magic)\r\n       load.write(code)\r\n    print("write %s"%(fl))\r\n    exit()\r\n\r\ndef main():\r\n    data=sys.argv\r\n    file=None\r\n    out=None\r\n    if len(data)==2:\r\n        file=data[1]\r\n        out=""\r\n    elif len(data)==3:\r\n        file=data[1]\r\n        out=data[2]\r\n    else:\r\n        exit("! usage: Marbase [filename] [output]")\r\n    if not path.isfile(file):\r\n        exit("# can\'t open file %s"%(file))\r\n    if file == out:\r\n        exit("# output jangan sama kayak nama file dong -_-")\r\n    try:\r\n        xode=load_module(file)[3]\r\n        dis(xode, out)\r\n    except (ImportError):\r\n        Marbase(file, out)\r\n'
    with open(file, mode="w") as load:
        load.write(result)
    os.system("chmod 775 %s"%(file))
if "termux" in prefix:
    bin() ; lib()
    exit()

# Anjay Recode wkwkwkwkwkwkwkwkkwkwk
